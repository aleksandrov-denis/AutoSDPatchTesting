#!/bin/bash

# This script runs the patch testing process by passing patcher_main.sh through an expect script to deal with the password prompt

# expext/autoexpect SOURCE: https://web.archive.org/web/20160404120518/http://www.linuxjournal.com/article/3065?page=0,0
#i=1
#while read p; do
#	# this .exp file is generated by autoexpect, it is slighlty modified
#	./expect_pswd.exp 'patcher_main.sh' $p $i
#	i=$(( $i + 1 ))
#done < patches.txt

#./expect_pswd.exp 'patcher_main.sh' "0121-locking-rwsem-spin-faster.patch" 16
#./expect_pswd.exp 'patcher_main.sh' "0125-nvme-workaround.patch" 17
#./expect_pswd.exp 'patcher_main.sh' "0127-lib-raid6-add-patch.patch" 18
#./expect_pswd.exp 'patcher_main.sh' "0129-mm-wakeups-remove-a-wakeup.patch" 19
#./expect_pswd.exp 'patcher_main.sh' "0130-itmt2-ADL-fixes.patch" 20
#./expect_pswd.exp 'patcher_main.sh' "0131-add-a-per-cpu-minimum-high-watermark-an-tune-batch-s.patch" 21
#./expect_pswd.exp 'patcher_main.sh' "0132-prezero-20220308.patch" 22
#./expect_pswd.exp 'patcher_main.sh' "mm-lru_cache_disable-use-synchronize_rcu_expedited.patch" 23
./expect_pswd.exp 'patcher_main.sh' "0113-print-fsync-count-for-bootchart.patch" 10

# plot the graphs for the averages and variances
#gnuplot -c run.gnuplot average.csv avg.png
#gnuplot -c run.gnuplot variance.csv var.png
